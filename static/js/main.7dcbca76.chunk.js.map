{"version":3,"sources":["BookCards.js","App.js","index.js"],"names":["BookCards","props","books","Object","keys","length","react_default","a","createElement","message","className","filter","book","volumeInfo","imageLinks","reverse","map","Card_default","key","id","Img","variant","alt","title","src","smallThumbnail","Body","Title","Text","authors","publisher","Button_default","href","canonicalVolumeLink","target","App","state","query","this","setState","e","keyCode","which","handleSearch","_this2","fetch","method","then","res","json","data","items","catch","error","_this3","isVisible","_this$state","InputGroup_default","FormControl_default","type","placeholder","onChange","handleChange","value","onKeyPress","enterPressed","Append","disabled","onClick","src_BookCards_0","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"kWAuDeA,SAjDG,SAACC,GAGjB,IAAIC,EAAQD,EAAMC,MAClB,OAAkC,IAA9BC,OAAOC,KAAKF,GAAOG,OAEnBC,EAAAC,EAAAC,cAAA,WAAMP,EAAMQ,SAIZH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAEXR,EAAMS,OAAO,SAACC,GAAD,OAAUA,EAAKC,WAAWC,aAAYC,UAAUC,IAAI,SAACJ,GAAD,OAC/DN,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEG,UAAY,YACZQ,IAAKN,EAAKO,IAGVb,EAAAC,EAAAC,cAACS,EAAAV,EAAKa,IAAN,CACEV,UAAU,kBACVW,QAAQ,MACRC,IAAMV,EAAKC,WAAWU,MACtBC,IAAKZ,EAAKC,WAAWC,WAAWW,iBAElCnB,EAAAC,EAAAC,cAACS,EAAAV,EAAKmB,KAAN,CACEhB,UAAU,kBACVJ,EAAAC,EAAAC,cAACS,EAAAV,EAAKoB,MAAN,CACEjB,UAAY,mBACVE,EAAKC,WAAWU,OACpBjB,EAAAC,EAAAC,cAACS,EAAAV,EAAKqB,KAAN,CACElB,UAAU,kBADZ,QAESE,EAAKC,WAAWgB,SACzBvB,EAAAC,EAAAC,cAACS,EAAAV,EAAKqB,KAAN,CACElB,UAAU,kBADZ,kBAEmBE,EAAKC,WAAWiB,WACnCxB,EAAAC,EAAAC,cAACuB,EAAAxB,EAAD,CACEyB,KAAMpB,EAAKC,WAAWoB,oBACtBC,OAAO,SACPb,QAAQ,QAHV,kBCwDDc,6MAzFbC,MAAQ,CACNC,MAAO,GACPnC,MAAO,GACPO,QAAS,uIAGE4B,GACXC,KAAKC,SAAS,CACXF,QACAnC,MAAO,GACPO,QAAS,iGAID+B,GAEE,MADFA,EAAEC,SAAWD,EAAEE,QAExBJ,KAAKK,sDAMM,IAAAC,EAAAN,KACRD,EAASC,KAAKF,MAAdC,MAGLQ,MAFY,yDACIR,EAAM,iDACX,CACPS,OAAQ,QAETC,KAAK,SAAAC,GAAG,OAAKA,EAAIC,SACjBF,KAAK,SAACG,GACL,GAAIA,EAAKC,MAAM,CACb,IAAIjD,EAAQgD,EAAKC,MACjBP,EAAKL,SAAS,CACZrC,eAGF0C,EAAKL,SAAS,CACZ9B,QAAS,uDAId2C,MAAM,SAAAC,GACLT,EAAKL,SAAS,CACR9B,QAAS,gHAMZ,IAAA6C,EAAAhB,KACDiB,EAA+B,KAAnBjB,KAAKF,MAAMC,MADtBmB,EAEiBlB,KAAKF,MAAtBlC,EAFAsD,EAEAtD,MAAMO,EAFN+C,EAEM/C,QACb,OACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAChBJ,EAAAC,EAAAC,cAAA,0BAEFF,EAAAC,EAAAC,cAAA,YAEEF,EAAAC,EAAAC,cAACiD,EAAAlD,EAAD,KACID,EAAAC,EAAAC,cAACkD,EAAAnD,EAAD,CACAoD,KAAO,SACPC,YAAa,sBACbC,SAAU,SAACrB,GAAD,OAAOc,EAAKQ,aAAatB,EAAEN,OAAO6B,QAC5CC,WAAY,SAACxB,GAAD,OAAMc,EAAKW,aAAazB,IACpCuB,MAAQzB,KAAKF,MAAMC,QAEnB/B,EAAAC,EAAAC,cAACiD,EAAAlD,EAAW2D,OAAZ,KACA5D,EAAAC,EAAAC,cAACuB,EAAAxB,EAAD,CACE4D,UAAaZ,EACblC,QAAS,OACT+C,QAAW,kBAAMd,EAAKX,iBAHxB,YAOJrC,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAC6D,EAAD,CACEnE,MAAOA,EACPO,QAAWA,aAlFL6D,aCFlBC,IAASC,OAAOlE,EAAAC,EAAAC,cAACiE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.7dcbca76.chunk.js","sourcesContent":["import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport './BookCards.css';\n\n\nconst BookCards = (props) => {\n\n\n  let books = props.books;\n  if (Object.keys(books).length === 0){\n    return (\n      <div>{props.message}</div>\n    );\n  } else {\n    return (\n      <div className=\"book-cards\">\n        {\n          books.filter((book) => book.volumeInfo.imageLinks).reverse().map((book) =>(\n            <Card\n              className = \"book-card\"\n              key={book.id}\n              // style = {{width: '45%'}}\n            >\n              <Card.Img\n                className=\"book-card-image\"\n                variant=\"top\"\n                alt= {book.volumeInfo.title}\n                src={book.volumeInfo.imageLinks.smallThumbnail}\n              />\n              <Card.Body\n                className=\"book-card-body\">\n                <Card.Title\n                  className = \"book-card-title\"\n                  >{book.volumeInfo.title}</Card.Title>\n                <Card.Text\n                  className=\"book-card-text\"\n                  >By:  {book.volumeInfo.authors}</Card.Text>\n                <Card.Text\n                  className=\"book-card-text\"\n                  >Published By:  {book.volumeInfo.publisher}</Card.Text>\n                <Button\n                  href={book.volumeInfo.canonicalVolumeLink}\n                  target=\"_blank\"\n                  variant=\"info\"\n                  >Details</Button>\n              </Card.Body>\n            </Card>\n          ))\n        }\n      </div>\n    );\n  }\n}\n\nexport default BookCards;","import React, { Component } from 'react';\nimport './App.css';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport BookCards from './BookCards';\n\nclass App extends Component {\n  state = {\n    query: \"\",\n    books: {},\n    message: \"Nothing to show yet. Try searching for a book by title!\"\n  }\n\n  handleChange(query) {\n    this.setState({\n       query,\n       books: {},\n       message: \"Nothing to show yet. Try searching for a book by title!\"\n    })\n  }\n\n  enterPressed(e){\n    let code = e.keyCode || e.which;\n    if (code === 13){\n      this.handleSearch();\n    } else {\n      return;\n    }\n  }\n\n  handleSearch() {\n    let {query} = this.state;\n    const api = \"https://www.googleapis.com/books/v1/volumes?q=intitle:\"\n    const url = api+query+'&orderBy=newest&printType=books&&maxResults=20';\n    fetch(url, {\n        method: 'GET'\n      })\n      .then(res =>  res.json())\n      .then((data) => {\n        if (data.items){\n          let books = data.items;\n          this.setState({\n            books\n          })\n        } else {\n          this.setState({\n            message: \"Could not find any book by that title! Try again\"\n          })\n        }\n      })\n      .catch(error => {\n        this.setState({\n              message: \"There seems to be a problem. Please check your connection and try again.\"\n        })\n        })\n\n  }\n\n  render() {\n    const isVisible = this.state.query!==\"\";\n    const {books,message} = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>BOOK FINDER</h1>\n        </header>\n        <main>\n          {/* ------ SearchBar ------ */}\n          <InputGroup>\n              <FormControl\n              type = \"search\"\n              placeholder= \"Search by book name\"\n              onChange={(e) => this.handleChange(e.target.value)}\n              onKeyPress={(e) =>this.enterPressed(e)}\n              value= {this.state.query}\n              />\n              <InputGroup.Append>\n              <Button\n                disabled = {!isVisible}\n                variant= \"info\"\n                onClick = {() => this.handleSearch()}\n              >Search</Button>\n              </InputGroup.Append>\n          </InputGroup>\n          <br></br>\n          {/* ------ BookCards ------ */}\n          <BookCards\n            books={books}\n            message = {message}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}